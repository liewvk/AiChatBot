service : {
  get: (text) -> (vec nat8) query;
  http_request: (record {
    url : text;
    method : text;
    body : vec nat8;
    headers : vec record { text; text };
  }) -> (record {
    body : vec nat8;
    headers : vec record { text; text };
    status_code : nat16;
    streaming_strategy : opt variant {
      Callback : record {
        token : record {
          key : text;
          sha256 : opt vec nat8;
          index : nat;
          content_encoding : text;
        };
        callback : func (record {
          key : text;
          sha256 : opt vec nat8;
          index : nat;
          content_encoding : text;
        }) -> (record {
          body : vec nat8;
          token : opt record {
            key : text;
            sha256 : opt vec nat8;
            index : nat;
            content_encoding : text;
          };
        }) query;
      };
    };
  }) query;
  http_request_streaming_callback: (record {
    key : text;
    sha256 : opt vec nat8;
    index : nat;
    content_encoding : text;
  }) -> (record {
    body : vec nat8;
    token : opt record {
      key : text;
      sha256 : opt vec nat8;
      index : nat;
      content_encoding : text;
    };
  }) query;
  list : (record {}) -> (vec record {
    key : text;
    content_type : text;
    encodings : vec record {
      content_encoding : text;
      sha256 : opt vec nat8;
      length : nat;
      modified : nat64;
    };
  }) query;
  store : (record {
    key : text;
    content_encoding : text;
    content_type : text;
    content : vec nat8;
    sha256 : opt vec nat8;
  }) -> ();
}